#!/bin/bash

# Debug
#set -x
#set -u
#set -e
#exec 1>${TOP_DIR}/stdout.log
#exec 2>${TOP_DIR}/stderr.log

# Version
readonly VER='2.0.0'
if [ $1 = '-v' ] 2>/dev/null;then
    echo Moss-${VER}
    exit 0
fi

## Pre-set Global readonly variables
readonly TOP_DIR="$(cd $(dirname $0);pwd)"

## Global Readonly Variables
## !!! DO NOT Modify These Settings !!!
readonly DATE=$(date +%Y%m%d-%H-%M)
readonly ARCH=$(uname -i)
readonly OS_ISSUE=$(head -n 1 /etc/issue | awk '{print $1}')
readonly OS_VER=$(awk '$1~/CentOS/{print $3}' /etc/issue | cut -d. -f1)
readonly STORE_DIR="${TOP_DIR}/src"
readonly INST_LOG="/var/log/moss.log"
readonly CHECK_MD5=1
readonly INST_CONF=1
readonly HOME='/var/empty'
readonly PATH='/usr/bin:/bin:/usr/sbin:/sbin'

## Shell Environment
export HOME PATH
alias cp='cp'
alias mv='mv'
alias rm='rm'
alias grep='grep --color'

## Include common functions
source ${TOP_DIR}/common/functions.sh

## Check Privilege
[ $(id -u) -ne 0 ] && fail_msg "You must be root!"

## Check Architecture
[ "$ARCH" != 'x86_64' ] && fail_msg "Moss didn't support $ARCH, please install x86_64!"

## Check OS
[ "${OS_ISSUE}" != 'CentOS' ] && fail_msg "Moss can be installed on CentOS release only!\nYour release is ${OS_ISSUE}"
[ "${OS_VER}" -lt 6 ] && fail_msg "Moss require CentOS 6 or above!\nYour release is ${OS_ISSUE}"

## Check Moss Configuration File
if [ ! -f "${TOP_DIR}/etc/moss.conf" ];then
    fail_msg "${TOP_DIR}/etc/moss.conf is not found!"
fi

## Weclcome
clear
cat ${TOP_DIR}/etc/banner
succ_msg "Welcome to Moss ${VER}\n"
succ_msg "Moss ia a Linux WEB application environment deployment system."
succ_msg "You need to edit ${TOP_DIR}/etc/moss.conf to modify some settings.\n"
succ_msg "Author: Nanu"
succ_msg "Contact: nanu@inanu.net"
succ_msg "Website: https://github.com/leonanu/moss/\n"

## Moss Options
warn_msg "Please Select Moss Installation Option "
warn_msg "================================================"
warn_msg "1 - Initial & optimize CentOS system only;"
warn_msg "2 - Install KeepAlived;"
warn_msg "3 - Install HAProxy;"
warn_msg "4 - Install Nginx web server standalone;"
warn_msg "5 - Install Nginx web server and PHP FastCGI;"
warn_msg "6 - Install MySQL database server;"
warn_msg "7 - Install Redis and memcached NoSQL database;"
warn_msg "8 - Install Zabbix agent;"
warn_msg "9 - Install NTP server;"
warn_msg "u - Uninstall Moss;"
warn_msg "================================================\n"
MOSS_OPT=1
read -p "Select an Install Option (Ctrl+C to quit):" MOSS_OPT

## Import Moss Settings
source ${TOP_DIR}/etc/moss.conf 2>/dev/null

## Import Hardware Information
source ${TOP_DIR}/common/hwinfo.sh 2>/dev/null

## Check Install Directory
[ ! -d $INST_DIR ] && mkdir -p $INST_DIR

## Check wget command
if ! grep '^YUM_WGET' ${INST_LOG} > /dev/null 2>&1 ;then
    yum install -y wget || fail_msg "Install wget Failed!"
    ## log installed tag
    echo 'YUM_WGET' >> ${INST_LOG}
fi

## Install development libs
install_dev () {
    source ${TOP_DIR}/common/install_dev.sh
}

## Config System
sysconfig () {
    source ${TOP_DIR}/common/root.pub.sh
    source ${TOP_DIR}/common/config_sys.sh
}

## Build development library
install_libs () {
    source ${TOP_DIR}/compile/zlib.sh
    source ${TOP_DIR}/compile/openssl.sh
    source ${TOP_DIR}/compile/cares.sh
    source ${TOP_DIR}/compile/curl.sh
    source ${TOP_DIR}/compile/libxml2.sh
    source ${TOP_DIR}/compile/pcre.sh
    source ${TOP_DIR}/compile/libmcrypt.sh
}

## KeepAlived
lb () {
    source ${TOP_DIR}/compile/keepalived.sh
}

## HAProxy
haproxy () {
    source ${TOP_DIR}/compile/haproxy.sh
}

## Nginx
web () {
    source ${TOP_DIR}/compile/nginx.sh
}

### PHP
php () {
    source ${TOP_DIR}/compile/php.sh
    if [ $ISXCACHE -eq 1 ];then
        source ${TOP_DIR}/compile/xcache.sh
    fi
    if [ $ISREDIS -eq 1 ];then
        source ${TOP_DIR}/compile/pecl_redis.sh
    fi
    if [ $ISMEMCACHE -eq 1 ];then
        source ${TOP_DIR}/compile/pecl_memcache.sh
    fi
    if [ $ISMEMCACHED -eq 1 ];then
        source ${TOP_DIR}/compile/libmemcached.sh
        source ${TOP_DIR}/compile/pecl_memcached.sh
    fi
    if [ $ISGEARMAN -eq 1 ];then
        source ${TOP_DIR}/compile/gearman.sh
        source ${TOP_DIR}/compile/pecl_gearman.sh
    fi
    if [ $ISXHPROF -eq 1 ];then
        source ${TOP_DIR}/compile/pecl_xhprof.sh
    fi
}

## MySQL
db () {
    source ${TOP_DIR}/compile/mysql.sh
    source ${TOP_DIR}/compile/percona-xtrabackup.sh
}

## NoSQL
nosql () {
    source ${TOP_DIR}/compile/redis.sh
    source ${TOP_DIR}/compile/libevent.sh
    source ${TOP_DIR}/compile/memcached.sh
}

## Zabbix Agent
zagent () {
    source ${TOP_DIR}/compile/zabbix_agent.sh
}

## NTP Server
ntp () {
    source ${TOP_DIR}/common/ntpd.sh
}

## Uninstall
uninstall () {
    source ${TOP_DIR}/common/uninstall.sh
}

case "${MOSS_OPT}" in
    1) # Init
        install_dev
        sysconfig
        ;;
    2) # KeepAlived
        get_pkginfo
        install_dev
        sysconfig
        install_libs
        lb
        ;;
    3) # HAProxy
        [ -z ${HA_PASSWORD} ] && fail_msg "You MUST set HA_PASSWORD in ${TOP_DIR}/etc/moss.conf!"
        [ -z ${HA_PORT} ] && fail_msg "You MUST set HA_PORT in ${TOP_DIR}/etc/moss.conf!"
        [ -z ${SITE_HOSTNAME} ] && fail_msg "You MUST set SITE_HOSTNAME in ${TOP_DIR}/etc/moss.conf!"
        get_pkginfo
        install_dev
        sysconfig
        install_libs
        haproxy
        ;;
    4) # WEB Server Only
        get_pkginfo
        install_dev
        sysconfig
        web
        ;;
    5) # WEB
        get_pkginfo
        install_dev
        sysconfig
        install_libs
        web
        php
        ;;
    6) # MySQL
        [ -z ${MYSQL_ROOT_PASS} ] && fail_msg "You MUST set MYSQL_ROOT_PASS in ${TOP_DIR}/etc/moss.conf!"
        [ -z ${MYSQL_MULADMIN_PASS} ] && fail_msg "You MUST set MYSQL_MULADMIN_PASS in ${TOP_DIR}/etc/moss.conf!"
        get_pkginfo
        install_dev
        sysconfig
        db
        ;;
    7) # NoSQL
        get_pkginfo
        install_dev
        sysconfig
        nosql 
        ;;
    8) # Zabbix Agent
        [ -z ${ZABBIX_SERVER_IP} ] && fail_msg "You MUST set ZABBIX_SERVER_IP in ${TOP_DIR}/etc/moss.conf!"
        get_pkginfo
        install_dev
        sysconfig
        zagent
        ;;
    9) # NTP
        install_dev
        sysconfig
        ntp
        ;;
    u) # Uninstall
        uninstall
        ;;
    *) # Invalid
       fail_msg "You specifid an invalid option!\n"
    ;;
esac

if [ $MOSS_OPT = 'u' ];then
    succ_msg '=================================='
    succ_msg '= Moss Uninstalled Successfully! ='
    succ_msg '=================================='
else
    succ_msg '================================'
    succ_msg '= Moss Installed Successfully! ='
    succ_msg '================================'
    warn_msg '*DO NOT* delete Moss installation directory!'
    warn_msg 'Otherwise, you will not be able to UNINSTALL'
    warn_msg 'or UPDATE Moss in the future!'
fi

## Close I/O redirection
#exec 1>&-
#exec 2>&-
